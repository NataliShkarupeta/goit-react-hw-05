{"version":3,"file":"static/js/33.b45756da.chunk.js","mappings":"qMAEaA,E,OAAeC,GAAAA,GAAD,yE,SCQ3B,EARwB,WACpB,OACE,SAACD,EAAD,wDAIL,C,gJCNYE,EAAOD,EAAAA,GAAAA,KAAH,iEAKJE,EAAYF,EAAAA,GAAAA,IAAH,wDAKTG,EAAWH,EAAAA,GAAAA,IAAH,yCAIRI,EAAOJ,EAAAA,GAAAA,IAAH,0CAIJK,EAAgBL,EAAAA,GAAAA,IAAH,0FAKbM,EAAaN,EAAAA,GAAAA,OAAH,iE,kBCkEvB,EA9EqB,WAAO,IAAD,IAiBb,IAhBJO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GACJ,OAAIA,EAAQC,GACHD,EAAQE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,iBACjC,IACAN,MAAK,SAAAO,GAAI,OAAIZ,EAASY,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAAClB,KAECG,EACH,OACE,iCACE,SAAC,KAAD,CAAMkB,GAAE,oBAAEhB,EAASiB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAACxB,EAAD,yBAEF,SAACyB,EAAA,QAAD,OAIN,IAAQC,EAAkDtB,EAAlDsB,YAAaC,EAAqCvB,EAArCuB,eAAgBC,EAAqBxB,EAArBwB,SAAUC,EAAWzB,EAAXyB,OAE/C,OACE,UAAC/B,EAAD,YACE,SAAC,KAAD,CAAMwB,GAAE,oBAAEhB,EAASiB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAACxB,EAAD,yBAEF,UAACJ,EAAD,YACE,SAACC,EAAD,WACE,gBACEiC,IAAG,0CAAqCJ,GACxCK,IAAKJ,EACLK,MAAM,WAGV,4BACE,wBAAKL,KACL,0BACE,SAAChC,EAAD,wBADF,IAC0BiC,MAE1B,0BACE,SAACjC,EAAD,uBAECkC,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,cAMlB,UAACnC,EAAD,YACE,mDACA,0BACG,KACD,SAAC,KAAD,CAAMuB,GAAG,OAAOC,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAA9C,oBAFM,SAMR,0BACG,KACD,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAAjD,uBAFM,eAOV,SAAC,EAAAY,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,uJCxFD,IAAMC,EAAO,mCACPC,EAAQ,+BAEDC,EAAW,WACvB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,qCAAyCD,GAErD,EAEY7B,EAAkB,SAAAR,GAC7B,OAAOwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,oBAAyCqC,GACtD,EAEYI,EAAkB,SAAAzC,GAC7B,OAAOwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,4BAAiDqC,GAC9D,EAGYK,EAAe,SAAA1C,GAC1B,OAAOwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,4BAAiDqC,GAC9D,EAGYM,EAAgB,SAAAC,GAC3B,OAAOJ,MAAM,GAAD,OAAIF,EAAJ,iCAAqCD,EAArC,kBAAsDO,GACnE,C","sources":["components/DefaultComponent/DefaultComponent.styled.js","components/DefaultComponent/DefaultComponent.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","service/service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const DefaultMassage=styled.h2`\npadding: 40px;\ntext-align: center;\nmargin: 0;\n`","import { DefaultMassage } from \"./DefaultComponent.styled\"\n\n const DefaultComponent=()=>{\n    return (\n      <DefaultMassage>\n        Oops......No information for this request!\n      </DefaultMassage>\n    );\n}\n\nexport default DefaultComponent;","import styled from 'styled-components';\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 22px;\n`;\n\nexport const ParentBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ImageBox = styled.div`\n  width: 300px;\n`;\n\nexport const Wrap = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin-bottom: 20px;\n  background-color: rgba(0, 0, 0, 0.05);\n`;\n\nexport const ButtonBack = styled.button`\nmargin-bottom: 15px;\nmargin-top: 10px;\n`","import { Suspense, useEffect, useState } from 'react';\nimport { fetchApiDetalis } from 'service/service';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport {\n  Span,\n  ParentBox,\n  ImageBox,\n  Wrap,\n  AdditionalBox,\n  ButtonBack,\n} from './MovieDetails.styled';\nimport DefaultComponent from 'components/DefaultComponent/DefaultComponent';\n\nconst MovieDetalis = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchApiDetalis(movieId)\n      .then(respons => {\n        if (respons.ok) {\n          return respons.json();\n        }\n        return Promise.reject(new Error('Sorry no info'));\n      })\n      .then(data => setMovie(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!movie) {\n    return (\n      <>\n        <Link to={location.state?.from ?? '/'}>\n          <ButtonBack>Go back</ButtonBack>\n        </Link>\n        <DefaultComponent />\n      </>\n    );\n  }\n  const { poster_path, original_title, overview, genres } = movie;\n\n  return (\n    <Wrap>\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonBack>Go back</ButtonBack>\n      </Link>\n      <ParentBox>\n        <ImageBox>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={original_title}\n            width=\"240\"\n          />\n        </ImageBox>\n        <div>\n          <h2>{original_title}</h2>\n          <p>\n            <Span>Overview:</Span> {overview}\n          </p>\n          <p>\n            <Span>Genres: </Span>\n\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </p>\n        </div>\n      </ParentBox>\n      <AdditionalBox>\n        <p>Additional inrormation</p>\n        <li key=\"cast\">\n          {' '}\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li key=\"reviews\">\n          {' '}\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </AdditionalBox>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Wrap>\n  );\n};\n\nexport default MovieDetalis;\n","\nconst Api_Key = `1bff0abb40f6fadb07212f8cd9949625`;\nconst Base_Url = `https://api.themoviedb.org/3`;\n\nexport const fetchApi = () => {\n return fetch(`${Base_Url}/trending/all/day?api_key=${Api_Key}`);\n    \n}\n\nexport const fetchApiDetalis = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}?api_key=${Api_Key}`);\n};\n\nexport const fetchApiReviews = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/reviews?api_key=${Api_Key}`);\n};\n\n\nexport const fetchApiCast = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/credits?api_key=${Api_Key}`);\n};\n\n\nexport const fetchApiQuery = query => {\n  return fetch(`${Base_Url}/search/movie?api_key=${Api_Key}&query=${query}`);\n};\n\n"],"names":["DefaultMassage","styled","Span","ParentBox","ImageBox","Wrap","AdditionalBox","ButtonBack","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","fetchApiDetalis","then","respons","ok","json","Promise","reject","Error","data","catch","error","console","log","to","state","from","DefaultComponent","poster_path","original_title","overview","genres","src","alt","width","map","id","name","Suspense","fallback","Api_Key","Base_Url","fetchApi","fetch","fetchApiReviews","fetchApiCast","fetchApiQuery","query"],"sourceRoot":""}