{"version":3,"file":"static/js/33.95b9f61d.chunk.js","mappings":"oLAEaA,E,OAAeC,GAAAA,GAAD,4D,gJCAdC,EAAOD,EAAAA,GAAAA,KAAH,iEAKJE,EAAYF,EAAAA,GAAAA,IAAH,wDAKTG,EAAWH,EAAAA,GAAAA,IAAH,yCAIRI,EAAOJ,EAAAA,GAAAA,IAAH,0CAIJK,EAAgBL,EAAAA,GAAAA,IAAH,0FAKbM,EAAaN,EAAAA,GAAAA,OAAH,8C,kBC+DvB,EA3EqB,WAAO,IAAD,IACjBO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAiBJ,EAAAA,EAAAA,WAAS,GAAnBK,GAAP,eAeA,IAbAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GACbU,MAAK,SAAAC,GACJ,OAAIA,EAAQC,GACHD,EAAQE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,iBAEjC,IACAN,MAAK,SAAAO,GAAI,OAAIb,EAASa,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACnB,KAECG,EACH,OAAO,KAET,IAAQmB,EAAkDnB,EAAlDmB,YAAaC,EAAqCpB,EAArCoB,eAAgBC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAG/C,OADAL,QAAQC,IAAId,IAEV,UAACV,EAAD,WACGU,IAAU,SAAC,IAAD,KACX,SAAC,KAAD,CAAMmB,GAAE,oBAAErB,EAASsB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAAC7B,EAAD,yBAEF,UAACJ,EAAD,YACE,SAACC,EAAD,WACE,gBACEiC,IAAG,0CAAqCP,GACxCQ,IAAKP,EACLQ,MAAM,WAGV,4BACE,wBAAKR,KACL,0BACE,SAAC7B,EAAD,wBADF,IAC0B8B,MAE1B,0BACE,SAAC9B,EAAD,uBAEC+B,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,cAMlB,UAACnC,EAAD,YACE,mDACA,0BACG,KACD,SAAC,KAAD,CAAM4B,GAAG,OAAOC,MAAO,CAAEC,KAAMvB,EAASsB,MAAMC,MAA9C,oBAFM,SAMR,0BACG,KACD,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAMvB,EAASsB,MAAMC,MAAjD,uBAFM,eAOV,SAAC,EAAAO,SAAD,WACE,SAAC,KAAD,QAIP,C,uJCxED,IAAMC,EAAO,mCACPC,EAAQ,+BAEDC,EAAW,WACvB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,qCAAyCD,GAErD,EAEY3B,EAAkB,SAAAT,GAC7B,OAAOuC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBrC,EAAtB,oBAAyCoC,GACtD,EAGYI,EAAkB,SAAAxC,GAC7B,OAAOuC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBrC,EAAtB,4BAAiDoC,GAC9D,EAGYK,EAAe,SAAAzC,GAC1B,OAAOuC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBrC,EAAtB,4BAAiDoC,GAC9D,EAGYM,EAAgB,SAAAC,GAC3B,OAAOJ,MAAM,GAAD,OAAIF,EAAJ,kCAAsCD,EAAtC,kBAAuDO,GACpE,C","sources":["components/DefaultComponent/DefaultComponent.styled.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","service/service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const DefaultMassage=styled.h1`\npadding: 40px;\ntext-align: center;\n`","import styled from 'styled-components';\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 22px;\n`;\n\nexport const ParentBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ImageBox = styled.div`\n  width: 300px;\n`;\n\nexport const Wrap = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin-bottom: 20px;\n  background-color: rgba(0, 0, 0, 0.05);\n`;\n\nexport const ButtonBack = styled.button`\nmargin-bottom: 15px;\n`","import { Suspense, useEffect, useState } from 'react';\nimport { fetchApiDetalis } from 'service/service';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport {\n  Span,\n  ParentBox,\n  ImageBox,\n  Wrap,\n  AdditionalBox,\n  ButtonBack,\n} from './MovieDetails.styled';\nimport { DefaultMassage } from 'components/DefaultComponent/DefaultComponent.styled';\n\nconst MovieDetalis = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const [defMas] = useState(false);\n\n  useEffect(() => {\n    fetchApiDetalis(movieId)\n      .then(respons => {\n        if (respons.ok) {\n          return respons.json();\n        }\n        return Promise.reject(new Error('Sorry no info'));\n        //  setDefMas(true)\n      })\n      .then(data => setMovie(data))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n  const { poster_path, original_title, overview, genres } = movie;\n\n  console.log(defMas);\n  return (\n    <Wrap>\n      {defMas && <DefaultMassage />}\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonBack>Go back</ButtonBack>\n      </Link>\n      <ParentBox>\n        <ImageBox>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={original_title}\n            width=\"240\"\n          />\n        </ImageBox>\n        <div>\n          <h2>{original_title}</h2>\n          <p>\n            <Span>Overview:</Span> {overview}\n          </p>\n          <p>\n            <Span>Genres: </Span>\n\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </p>\n        </div>\n      </ParentBox>\n      <AdditionalBox>\n        <p>Additional inrormation</p>\n        <li key=\"cast\">\n          {' '}\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li key=\"reviews\">\n          {' '}\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </AdditionalBox>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Wrap>\n  );\n};\n\nexport default MovieDetalis;\n","// Example request: https://api.themoviedb.org/3/movie/550?api_key=1bff0abb40f6fadb07212f8cd9949625\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// URL: /discover/movie?sort_by=popularity.desc\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\n// '/' – компонент Home, домашня сторінка зі списком популярних кінофільмів.\n// '/movies' – компонент Movies, сторінка пошуку кінофільмів за ключовим словом.\n// '/movies/:movieId' – компонент MovieDetails, сторінка з детальною інформацією про кінофільм.\n// /movies/:movieId/cast – компонент Cast, інформація про акторський склад. Рендериться на сторінці MovieDetails.\n// /movies/:movieId/reviews – компонент Reviews, інформація про огляди. Рендериться на сторінці MovieDetails.\n\nconst Api_Key = `1bff0abb40f6fadb07212f8cd9949625`;\nconst Base_Url = `https://api.themoviedb.org/3`;\n\nexport const fetchApi = () => {\n return fetch(`${Base_Url}/trending/all/day?api_key=${Api_Key}`);\n    \n}\n\nexport const fetchApiDetalis = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}?api_key=${Api_Key}`);\n};\n\n\nexport const fetchApiReviews = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/reviews?api_key=${Api_Key}`);\n};\n\n\nexport const fetchApiCast = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/credits?api_key=${Api_Key}`);\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchApiQuery = query => {\n  return fetch(`${Base_Url}/search/movie/?api_key=${Api_Key}&query=${query}`);\n};\n\n"],"names":["DefaultMassage","styled","Span","ParentBox","ImageBox","Wrap","AdditionalBox","ButtonBack","movieId","useParams","useState","movie","setMovie","location","useLocation","defMas","useEffect","fetchApiDetalis","then","respons","ok","json","Promise","reject","Error","data","catch","error","console","log","poster_path","original_title","overview","genres","to","state","from","src","alt","width","map","id","name","Suspense","Api_Key","Base_Url","fetchApi","fetch","fetchApiReviews","fetchApiCast","fetchApiQuery","query"],"sourceRoot":""}