{"version":3,"file":"static/js/544.805e3464.chunk.js","mappings":"8MA4CA,UAvCc,WACZ,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAejB,IAbAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJ,OAAIA,EAAQC,GACHD,EAAQE,OAGVC,QAAQC,OAAO,IAAIC,MAAM,iBACjC,IACAN,MAAK,SAAAO,GAAI,OAAIZ,EAAUY,EAAKC,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,IAEEhB,EAGL,OACE,iCACE,UAAC,IAAD,YACE,SAAC,EAAAmB,GAAD,6BACCnB,EAAOoB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAhD,SACGmB,EAAMK,OAASL,EAAMM,QAFjBN,EAAME,GADA,QAQnB,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,uGCxCYC,EAAMC,EAAAA,GAAAA,IAAH,qGAOHZ,EAAKY,EAAAA,GAAAA,GAAH,8E,uJCRf,IAAMC,EAAO,mCACPC,EAAQ,+BAED5B,EAAW,WACvB,OAAO6B,MAAM,GAAD,OAAID,EAAJ,qCAAyCD,GAErD,EAEYG,EAAkB,SAAAC,GAC7B,OAAOF,MAAM,GAAD,OAAID,EAAJ,kBAAsBG,EAAtB,oBAAyCJ,GACtD,EAOYK,EAAkB,SAAAD,GAC7B,OAAOF,MAAM,GAAD,OAAID,EAAJ,kBAAsBG,EAAtB,4BAAiDJ,GAC9D,EAGYM,EAAe,SAAAF,GAC1B,OAAOF,MAAM,GAAD,OAAID,EAAJ,kBAAsBG,EAAtB,4BAAiDJ,GAC9D,EAGYO,EAAgB,SAAAC,GAC3B,OAAON,MAAM,sDAAD,OAC4CF,EAD5C,kBAC6DQ,GAE1E,C","sources":["pages/Home/Home.jsx","pages/Home/Home.styled.js","service/service.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchApi } from 'service/service';\nimport { Box, H2 } from './Home.styled';\n\n const Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchApi()\n      .then(respons => {\n        if (respons.ok) {\n          return respons.json();\n        }\n\n        return Promise.reject(new Error('Sorry no info'));\n      })\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  if (!movies) {\n    return;\n  }\n  return (\n    <>\n      <Box>\n        <H2>Trending Today</H2>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n      </Box>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Home;","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const H2 = styled.h2`\n  margin: 0;\n  font-weight: 500;\n  font-size: 30px;\n`;\n","\nconst Api_Key = `1bff0abb40f6fadb07212f8cd9949625`;\nconst Base_Url = `https://api.themoviedb.org/3`;\n\nexport const fetchApi = () => {\n return fetch(`${Base_Url}/trending/all/day?api_key=${Api_Key}`);\n    \n}\n\nexport const fetchApiDetalis = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}?api_key=${Api_Key}`);\n};\n\n// const fetchUsers = async () => {\n//   const response = await fetch('https://jsonplaceholder.typicode.com/users');\n//   const users = await response.json();\n//   return users;\n// };\nexport const fetchApiReviews = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/reviews?api_key=${Api_Key}`);\n};\n\n\nexport const fetchApiCast = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/credits?api_key=${Api_Key}`);\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchApiQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie/?api_key=${Api_Key}&query=${query}`\n  );\n};\n\n// const data = await axios.get(\n//   `${API_BASE}3/search/movie?api_key=${API_KEY}&query=${query}`\n// );"],"names":["useState","movies","setMovies","location","useLocation","useEffect","fetchApi","then","respons","ok","json","Promise","reject","Error","data","results","catch","error","console","log","H2","map","movie","to","id","state","from","title","name","Suspense","fallback","Box","styled","Api_Key","Base_Url","fetch","fetchApiDetalis","movieId","fetchApiReviews","fetchApiCast","fetchApiQuery","query"],"sourceRoot":""}