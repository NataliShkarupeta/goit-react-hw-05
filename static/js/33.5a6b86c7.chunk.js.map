{"version":3,"file":"static/js/33.5a6b86c7.chunk.js","mappings":"qMAEaA,E,OAAeC,GAAAA,GAAD,6D,SCI3B,EAJwB,WACpB,OAAO,SAACD,EAAD,6CACV,C,gJCFYE,EAAOD,EAAAA,GAAAA,KAAH,iEAKJE,EAAYF,EAAAA,GAAAA,IAAH,wDAKTG,EAAWH,EAAAA,GAAAA,IAAH,yCAIRI,EAAOJ,EAAAA,GAAAA,IAAH,0CAIJK,EAAgBL,EAAAA,GAAAA,IAAH,0FAKbM,EAAaN,EAAAA,GAAAA,OAAH,8C,kBC+DvB,EA3EqB,WAAO,IAAD,IACjBO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,IAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GACJ,OAAIA,EAAQC,GACHD,EAAQE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,iBACjC,IACAN,MAAK,SAAAO,GAAI,OAAIZ,EAASY,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAIF,EAAf,GACf,GAAE,CAAClB,IAIJmB,QAAQC,IAAIjB,IACPA,EACH,OAAO,SAACkB,EAAA,QAAD,IAET,IAAQC,EAAkDnB,EAAlDmB,YAAaC,EAAqCpB,EAArCoB,eAAgBC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAE/C,OACE,UAAC5B,EAAD,YACE,SAAC,KAAD,CAAM6B,GAAE,oBAAErB,EAASsB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAAC7B,EAAD,yBAEF,UAACJ,EAAD,YACE,SAACC,EAAD,WACE,gBACEiC,IAAG,0CAAqCP,GACxCQ,IAAKP,EACLQ,MAAM,WAGV,4BACE,wBAAKR,KACL,0BACE,SAAC7B,EAAD,wBADF,IAC0B8B,MAE1B,0BACE,SAAC9B,EAAD,uBAEC+B,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,cAMlB,UAACnC,EAAD,YACE,mDACA,0BACG,KACD,SAAC,KAAD,CAAM4B,GAAG,OAAOC,MAAO,CAAEC,KAAMvB,EAASsB,MAAMC,MAA9C,oBAFM,SAMR,0BACG,KACD,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAMvB,EAASsB,MAAMC,MAAjD,uBAFM,eAOV,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,uJCrFD,IAAMC,EAAO,mCACPC,EAAQ,+BAEDC,EAAW,WACvB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,qCAAyCD,GAErD,EAEY7B,EAAkB,SAAAR,GAC7B,OAAOwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,oBAAyCqC,GACtD,EAOYI,EAAkB,SAAAzC,GAC7B,OAAOwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,4BAAiDqC,GAC9D,EAGYK,EAAe,SAAA1C,GAC1B,OAAOwC,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtC,EAAtB,4BAAiDqC,GAC9D,EAGYM,EAAgB,SAAAC,GAC3B,OAAOJ,MAAM,sDAAD,OAC4CH,EAD5C,kBAC6DO,GAE1E,C","sources":["components/DefaultComponent/DefaultComponent.styled.js","components/DefaultComponent/DefaultComponent.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","service/service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const DefaultMassage=styled.h1`\npadding: 40px;\ntext-align: center;\n`","import { DefaultMassage } from \"./DefaultComponent.styled\"\n\n const DefaultComponent=()=>{\n    return <DefaultMassage> Ops......No info on this path!</DefaultMassage>;\n}\n\nexport default DefaultComponent;","import styled from 'styled-components';\n\nexport const Span = styled.span`\n  font-weight: 500;\n  font-size: 22px;\n`;\n\nexport const ParentBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ImageBox = styled.div`\n  width: 300px;\n`;\n\nexport const Wrap = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditionalBox = styled.div`\n  margin-bottom: 20px;\n  background-color: rgba(0, 0, 0, 0.05);\n`;\n\nexport const ButtonBack = styled.button`\nmargin-bottom: 15px;\n`","import { Suspense, useEffect, useState } from 'react';\nimport { fetchApiDetalis } from 'service/service';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport {\n  Span,\n  ParentBox,\n  ImageBox,\n  Wrap,\n  AdditionalBox,\n  ButtonBack,\n} from './MovieDetails.styled';\nimport DefaultComponent from 'components/DefaultComponent/DefaultComponent';\n\nconst MovieDetalis = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n \n\n  useEffect(() => {\n    fetchApiDetalis(movieId)\n      .then(respons => {\n        if (respons.ok) {\n          return respons.json();\n        }\n        return Promise.reject(new Error('Sorry no info'));\n      })\n      .then(data => setMovie(data))\n      .catch(error =>console.log(error));\n  }, [movieId]);\n\n\n  \n  console.log(movie);\n  if (!movie) {\n    return <DefaultComponent />;\n  }\n  const { poster_path, original_title, overview, genres } = movie;\n\n  return (\n    <Wrap>\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonBack>Go back</ButtonBack>\n      </Link>\n      <ParentBox>\n        <ImageBox>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={original_title}\n            width=\"240\"\n          />\n        </ImageBox>\n        <div>\n          <h2>{original_title}</h2>\n          <p>\n            <Span>Overview:</Span> {overview}\n          </p>\n          <p>\n            <Span>Genres: </Span>\n\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </p>\n        </div>\n      </ParentBox>\n      <AdditionalBox>\n        <p>Additional inrormation</p>\n        <li key=\"cast\">\n          {' '}\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li key=\"reviews\">\n          {' '}\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </AdditionalBox>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Wrap>\n  );\n};\n\nexport default MovieDetalis;\n","\nconst Api_Key = `1bff0abb40f6fadb07212f8cd9949625`;\nconst Base_Url = `https://api.themoviedb.org/3`;\n\nexport const fetchApi = () => {\n return fetch(`${Base_Url}/trending/all/day?api_key=${Api_Key}`);\n    \n}\n\nexport const fetchApiDetalis = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}?api_key=${Api_Key}`);\n};\n\n// const fetchUsers = async () => {\n//   const response = await fetch('https://jsonplaceholder.typicode.com/users');\n//   const users = await response.json();\n//   return users;\n// };\nexport const fetchApiReviews = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/reviews?api_key=${Api_Key}`);\n};\n\n\nexport const fetchApiCast = movieId => {\n  return fetch(`${Base_Url}/movie/${movieId}/credits?api_key=${Api_Key}`);\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchApiQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie/?api_key=${Api_Key}&query=${query}`\n  );\n};\n\n// const data = await axios.get(\n//   `${API_BASE}3/search/movie?api_key=${API_KEY}&query=${query}`\n// );"],"names":["DefaultMassage","styled","Span","ParentBox","ImageBox","Wrap","AdditionalBox","ButtonBack","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","fetchApiDetalis","then","respons","ok","json","Promise","reject","Error","data","catch","error","console","log","DefaultComponent","poster_path","original_title","overview","genres","to","state","from","src","alt","width","map","id","name","Suspense","fallback","Api_Key","Base_Url","fetchApi","fetch","fetchApiReviews","fetchApiCast","fetchApiQuery","query"],"sourceRoot":""}